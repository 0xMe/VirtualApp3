name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type to run'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
        - both
      run_tests:
        description: 'Run tests'
        required: false
        default: true
        type: boolean
      upload_artifacts:
        description: 'Upload APK artifacts'
        required: false
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties

    - name: Create gradle.properties with build configurations
      run: |
        cat > gradle.properties << EOF
        # Project-wide Gradle settings
        org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
        org.gradle.parallel=true
        org.gradle.caching=true
        android.useAndroidX=true
        android.enableJetifier=true
        
        # Build configurations (customize these values)
        PACKAGE_NAME=com.yourapp.package
        EXT_PACKAGE_NAME=com.yourapp.package.ext
        VA_VERSION_CODE=1
        VA_VERSION=1.0.0
        VA_ACCESS_PERMISSION_NAME=com.yourapp.ACCESS_PERMISSION
        VA_MAIN_PACKAGE_32BIT=false
        
        # Signing configurations (using dummy values for CI)
        signing_storeFile=debug.keystore
        signing_storePassword=android
        signing_keyAlias=androiddebugkey
        signing_keyPassword=android
        EOF

    - name: Create debug keystore
      run: |
        mkdir -p app/
        keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run tests
      run: ./gradlew test
      if: github.event.inputs.run_tests != 'false'

    - name: Build Debug APK
      run: ./gradlew assembleDebug
      if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == ''

    - name: Build Release APK
      run: ./gradlew assembleRelease
      if: github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both'
      continue-on-error: true

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-${{ github.run_number }}
        path: app/build/outputs/apk/debug/*.apk
      if: (github.event.inputs.upload_artifacts != 'false') && (github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '')

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-${{ github.run_number }}
        path: app/build/outputs/apk/release/*.apk
      if: success() && (github.event.inputs.upload_artifacts != 'false') && (github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both')

  # Optional: Add a job for running lint checks
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties

    - name: Create gradle.properties
      run: |
        cat > gradle.properties << EOF
        org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
        android.useAndroidX=true
        android.enableJetifier=true
        PACKAGE_NAME=com.yourapp.package
        EXT_PACKAGE_NAME=com.yourapp.package.ext
        VA_VERSION_CODE=1
        VA_VERSION=1.0.0
        VA_ACCESS_PERMISSION_NAME=com.yourapp.ACCESS_PERMISSION
        VA_MAIN_PACKAGE_32BIT=false
        signing_storeFile=debug.keystore
        signing_storePassword=android
        signing_keyAlias=androiddebugkey
        signing_keyPassword=android
        EOF

    - name: Run lint
      run: ./gradlew lintDebug

    - name: Upload lint reports
      uses: actions/upload-artifact@v4
      with:
        name: lint-reports-${{ github.run_number }}
        path: app/build/reports/lint-results-debug.html
      if: always()
